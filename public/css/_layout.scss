// The main container
//
// Markup:
// <div class="container"></div>
//
// Styleguide 2.1.
.container {
  @include outer-container();
  padding-left: $gutter;
  padding-right: $gutter;
}

// Container intro
//
// The first heading of the main container
//
// Markup:
// <div class="container">
//   <div class="container-intro">
//     <h2>Make the most of your <code>WebView</code></h2>
//     <p>Because it will help <a href="#">you</a>.</p>
//   </div>
// </div>
//
// Styleguide 2.1.1
.container-intro {
  @include media($wide) {
    text-align: center;
    @include span-columns(4 of 6);
    @include shift(1);
    margin-bottom: modular-scale($base-font-size, 4, $base-ratio);
    h1, h2, h3, h4, h5, h6 {
      text-align: center;
    }
  }
}

// Fixes the visual grid based on the containerâ€™s padding.
//
// No styleguide reference.
@if $visual-grid == true {
  body:before {
    @include calc(width, '100% - #{ $gutter * 2 }');
    @include calc(max-width, '#{ $max-width } - #{ $gutter * 2 }');
  }
}

// A class that resets the row within a container.
//
// Markup:
// <div class="row"></div>
//
// Styleguide 2.2.
.row,
.row--lrt {
  position: relative;
  display: block;
  @include row();
  @include media($wide) {
    @include row();
    @include span-columns(6);
    @include shift(1);
  }
}

// A class that changes the text direction of the row to Right to Left.
//
// Markup:
// <div class="row--rtl"></div>
//
// Styleguide 2.2.1.
.row--rtl {
  @include row(RTL);
}

// Row margins,
// this might be too presumptuous
main {
  .row + .row {
    margin-top: $base-line-height * 2em;
  }
}
